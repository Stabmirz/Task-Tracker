{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","showAdd","onAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setTasks","showAddTask","setShowAddTask","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3e42d08.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className='btn'\n    >\n      {text}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  color: 'steelblue',\n}\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  onClick: PropTypes.func,\n}\n\nexport default Button","import PropTypes from 'prop-types';\nimport Button from './Button'\n\n\nconst Header = ({ title, showAdd, onAdd }) => {\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button color={showAdd?'red':'green'} text={ showAdd? 'Close':'Add'} onClick={onAdd}  />\n        </header>\n    )\n}\n\n// if no props passed \nHeader.defaultProps={\n    title : \"Task Manager\",\n}\n\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n// CSS in JS\n// const headingStyle = {\n//     color:'red',\n//     backgroundColor:'black',\n// }\n\nexport default Header;\n\n","import {FaTimes} from 'react-icons/fa'\n\nfunction Task({task, onDelete, onToggle}) {\n    return (\n        <div className={`task ${task.reminder? 'reminder' : ''}`} onDoubleClick={()=>onToggle(task.id)}>\n            <h3>{task.text} <FaTimes onClick={()=>onDelete(task.id)} style={{color:'red', cursor:'pointer'}}/></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) =>{\n\n    return (\n        <>\n            {tasks.map((task) => (\n                <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>\n            ))}\n        </>\n    )\n}\n\nexport default Tasks;\n","import {useState} from 'react'\n\nfunction AddTask({onAdd}) {\n    const [text, setText] = useState('');\n    const [day, setDay] = useState('');\n    const [reminder, setReminder] = useState(false);\n\n    const onSubmit = (e) =>{\n        e.preventDefault();\n\n        if(!text){\n            alert(\"Please add a Task\")\n        }\n        onAdd({text, day, reminder})\n        setText('')\n        setDay('')\n        setReminder(false)\n\n    }\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label>Add Task</label>\n                <input type=\"text\" placeholder=\"Add task\" value={text} onChange={(e)=>setText(e.target.value)}/>\n            </div>\n            <div className=\"form-control\">\n                <label>Day & Time</label>\n                <input type=\"text\" placeholder=\"Add day & Time\" value={day} onChange={(e)=>setDay(e.target.value)}/>\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Set Reminder</label>\n                <input type=\"checkbox\" checked={reminder} onChange={(e)=>setReminder(e.currentTarget.checked)}/>\n            </div>\n            <input type=\"submit\" className=\"btn btn-block\" value=\"Save Task\" />\n        </form>\n    )\n}\n\nexport default AddTask\n","import Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport { useState } from 'react';\nimport AddTask from './components/AddTask';\n\nfunction App() {\n  const [tasks, setTasks] = useState(\n    [\n        {\n            id:1,\n            text:'Food Shopping',\n            day: 'Feb 5th at 2:30pm',\n            reminder:true\n        },\n        {\n            id:2,\n            text:'Cloth Shopping',\n            day: 'Feb 6th at 2:30pm',\n            reminder:false\n        },\n        {\n            id:3,\n            text:'Groceries Shopping',\n            day: 'Feb 7th at 2:30pm',\n            reminder:true\n        },\n    ]\n)\n\nconst [showAddTask, setShowAddTask] = useState(false)\n\n// Add Task\n\nconst addTask = (task) =>{\n  const id = Math.floor(Math.random() *1000) + 1\n  const newTask = {id, ...task}\n  setTasks(()=>[...tasks, newTask])\n}\n\n// Delete Task\nconst deleteTask = (id) =>{\n  setTasks(tasks.filter((task)=> task.id !== id))\n}\n\n// Toggle reminder\n\nconst toggleReminder = (id) => {\n  setTasks(\n    tasks.map((task)=>\n      task.id === id? {\n        ...task,\n        reminder: !task.reminder,\n      } : task\n    )\n  )\n}\n\n  return (\n    <div className=\"container\">\n      <Header title=\"Task Manager\" showAdd={showAddTask} onAdd={()=> setShowAddTask(!showAddTask)}/>\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length>0? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder}/> ) : ( 'No Task To Show')\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}